What happens when you initialize a repository? Why do you need to do it?
It lets git know of the repository and allows it to start tracking files in that repository. Init is needed to get git to 'look' at the repository

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area allows us to have greater control on what is commited from a repository. It is a placeholder in comparison with the working directory.

How can you use the staging area to make sure you have one commit per logical change?
Comparing the staging area to working directory and then comparing the staging area to previous commit (git diff --staged), will show clearly 
what exact change is being introduced. This helps to narrow down the logical change that we are trying to commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Situations such as introducing an experimental feature or porting the code to a different language, would be a good place to use branches. Branches can help by not having to take focus away from work being done to the master.

How do the diagrams help you visualize the branch structure?
Diagrams show when and where the branching occured. It also keeps us informed of unreachable commits.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
When 2 branches are merged, all changes made on each branch, from the point of branching out, get incroporated into the new, merged branch. The diagram helps visualize that the merged branch has now become the main/primary branch.
